name: Build Ubuntu PHP test images

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/Dockerfile.ubuntu-php-test
      - .github/workflows/build-ubuntu-php-test-images.yml

permissions:
  contents: read
  packages: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: aikidosec/firewall-php-test-ubuntu
  VERSION: v1

jobs:
  build-amd64:
    runs-on: ubuntu-24.04
    strategy:
      matrix: { php_version: ['7.2','7.3','7.4','8.0','8.1','8.2','8.3','8.4'] }
      fail-fast: false
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: .github/workflows/Dockerfile.ubuntu-php-test
          platforms: linux/amd64
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.php_version }}-amd64-${{ env.VERSION }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.php_version }}-amd64-${{ env.VERSION }}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.php_version }}-amd64-${{ env.VERSION }},mode=max

  build-arm64:
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix: { php_version: ['7.2','7.3','7.4','8.0','8.1','8.2','8.3','8.4'] }
      fail-fast: false
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: .github/workflows/Dockerfile.ubuntu-php-test
          platforms: linux/arm64
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.php_version }}-arm64-${{ env.VERSION }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.php_version }}-arm64-${{ env.VERSION }}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.php_version }}-arm64-${{ env.VERSION }},mode=max

  publish-manifests:
    runs-on: ubuntu-24.04
    needs: [build-amd64, build-arm64]
    strategy:
      matrix: { php_version: ['7.2','7.3','7.4','8.0','8.1','8.2','8.3','8.4'] }
      fail-fast: false
    permissions: { contents: read, packages: write }
    steps:
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multi-arch manifest
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          V=${{ matrix.php_version }}
          docker buildx imagetools create \
            --tag ${IMAGE}:${V}-${{ env.VERSION }} \
            ${IMAGE}:${V}-amd64-${{ env.VERSION }} \
            ${IMAGE}:${V}-arm64-${{ env.VERSION }}
