FROM ubuntu:24.04 AS build-deps

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates curl git pkg-config build-essential \
    autoconf automake libtool bison re2c \
    # Core PHP deps
    libxml2-dev libsqlite3-dev libssl-dev zlib1g-dev libzip-dev \
    libcurl4-openssl-dev libreadline-dev libicu-dev \
    # For PHP ≤7.x mbstring needs oniguruma:
    libonig-dev \
    # GD (often useful; safe to have)
    libjpeg-dev libpng-dev libwebp-dev \
    # SAPI integrations
    apache2-dev \
 && rm -rf /var/lib/apt/lists/*

 
FROM build-deps AS php-src
ARG PHP_SRC_REF=php-8.3.10
WORKDIR /usr/src
RUN git clone --depth 1 --branch "${PHP_SRC_REF}" https://github.com/php/php-src.git
WORKDIR /usr/src/php-src
RUN ./buildconf --force

# ============================================================
# Build PHP (CLI + FPM + Apache module), common extensions
# ============================================================
FROM php-src AS php-build

# Configure flags roughly mirror what your tests need:
# - CLI (for built-in server)  - always present
# - FPM (for nginx)            - --enable-fpm
# - Apache module              - --with-apxs2
# - Extensions: curl, intl, mbstring, mysqli, pdo_mysql, zip, opcache, etc.
RUN ./configure \
      --prefix=/usr/local \
      --with-config-file-path=/usr/local/etc \
      --with-config-file-scan-dir=/usr/local/etc/php/conf.d \
      --enable-cli \
      --enable-fpm \
      --with-fpm-user=www-data --with-fpm-group=www-data \
      --with-apxs2=/usr/bin/apxs2 \
      --enable-opcache \
      --enable-mbstring \
      --enable-pcntl \
      --enable-intl \
      --with-curl \
      --with-zlib \
      --with-zip \
      --with-openssl \
      --with-mysqli \
      --with-pdo-mysql \
      --with-readline \
      --with-jpeg \
      --with-webp \
      --with-png \
  && make -j"$(nproc)" \
  && make install \
  && strip /usr/local/bin/php || true \
  && strip /usr/local/sbin/php-fpm || true \
  && install -d /usr/local/etc/php/conf.d

# ============================================================
# Runtime image with servers, DB, Python deps, and PHP installed
# ============================================================
FROM ubuntu:24.04 AS runtime

ENV DEBIAN_FRONTEND=noninteractive
# Core utils + servers + DB + Python libs used by tests
RUN apt-get update && apt-get install -y --no-install-recommends \
    tzdata gnupg ca-certificates curl git procps lsb-release \
    # Web servers
    nginx apache2 \
    # DB
    mariadb-server \
    # For your "Check PHP setup" step
    apache2-bin \
    # Python deps in the workflow
    python3 python3-flask python3-pandas python3-psutil python3-requests \
  && rm -rf /var/lib/apt/lists/*

# Timezone config (your CI steps set UTC explicitly)
RUN ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    echo "Etc/UTC" > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata

# Copy PHP built artifacts
COPY --from=php-build /usr/local/ /usr/local/

# Make sure apache sees libphp*.so from our build (apxs2 installed it under /usr/lib/apache2/modules)
# Enable rewrite (your workflow does this), and leave MPM decisions to your steps.
RUN a2enmod rewrite || true

# Create directories MariaDB and php-fpm often expect
RUN mkdir -p /var/lib/mysql /run/mysqld /var/www/html /usr/local/etc/php/conf.d

# Minimal health helpers & defaults
EXPOSE 80 9000
WORKDIR /workspace

# Default command: just a shell — your workflow will run the same commands you already have
CMD ["bash"]