name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ['7.3', '7.4', '8.0', '8.1', '8.2', '8.3']
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y autoconf bison re2c libxml2-dev libssl-dev libcurl4-gnutls-dev

    - name: Get Aikido version
      run: |
        AIKIDO_VERSION=$(grep '# define PHP_AIKIDO_VERSION' include/php_aikido.h | awk -F'"' '{print $2}')
        echo $AIKIDO_VERSION
        echo "AIKIDO_VERSION=$AIKIDO_VERSION" >> $GITHUB_ENV
        echo "AIKIDO_ARTIFACT=aikido_$AIKIDO_VERSION_php_${{ matrix.php_version }}" >> $GITHUB_ENV

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php_version }}
        extensions: :curl

    - name: Check PHP setup
      run: |
        which php
        php -v
        php -i

    - name: Build Aikido
      run: |
        cd ${{ github.workspace }}
        rm -rf build
        mkdir build
        cd src/extension
        phpize
        cd ../lib
        go build -buildmode=c-archive -o ../../build/libaikido_go.a
        cd ../../build
        CXX=g++ CXXFLAGS="-fPIC -I../include" LDFLAGS="-L./ -laikido_go" ../src/extension/configure
        make
        sudo make install

    - name: Run Aikido tests
      run: |
        cd ${{ github.workspace }}
        php src/extension/run-tests.php ./tests

    - name: Delete existing artifact
      uses: geekyeggo/delete-artifact@v5
      with:
          name: ${{ env.AIKIDO_ARTIFACT }}
          failOnError: false
        
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.AIKIDO_ARTIFACT }}
        path: ${{ github.workspace }}/build/modules/aikido.so
        if-no-files-found: error
