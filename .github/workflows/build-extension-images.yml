name: Create images for building extension

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/Dockerfile.build-extension
      - .github/workflows/build-extension-images.yml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: aikidosec/firewall-php-build-extension

jobs:
  # ---- amd64 native builds on x64 runner ----
  build-amd64:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        php_version: ['7.2','7.3','7.4','8.0','8.1','8.2','8.3','8.4']
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push (amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: dev
          platforms: linux/amd64
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            PHP_SRC_REF=PHP-${{ matrix.php_version }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.php_version }}-amd64
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.php_version }}-amd64
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.php_version }}-amd64,mode=max

  # ---- arm64 native builds on ARM runner ----
  build-arm64:
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        php_version: ['7.2','7.3','7.4','8.0','8.1','8.2','8.3','8.4']
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push (arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: dev
          platforms: linux/arm64
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            PHP_SRC_REF=PHP-${{ matrix.php_version }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.php_version }}-arm64
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.php_version }}-arm64
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.php_version }}-arm64,mode=max


  # ---- stitch images into multi-arch manifests ----
  publish-manifests:
    runs-on: ubuntu-24.04
    needs: [build-amd64, build-arm64]
    strategy:
      fail-fast: false
      matrix:
        php_version: ['7.2','7.3','7.4','8.0','8.1','8.2','8.3','8.4']
    steps:
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi-arch manifest
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          V=${{ matrix.php_version }}
          docker buildx imagetools create \
            --tag ${IMAGE}:${V} \
            ${IMAGE}:${V}-amd64 \
            ${IMAGE}:${V}-arm64